<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nounsys.nounservice.datasource.account.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.nounsys.nounservice.datasource.account.entity.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="display_name" jdbcType="VARCHAR" property="displayName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="master_id" jdbcType="BIGINT" property="masterId" />
    <result column="is_api_access" jdbcType="BIT" property="isApiAccess" />
    <result column="is_console_access" jdbcType="BIT" property="isConsoleAccess" />
    <result column="is_need_verify" jdbcType="BIT" property="isNeedVerify" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, display_name, mobile, email, password, type, uid, status, master_id, 
    is_api_access, is_console_access, is_need_verify, description, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.nounsys.nounservice.datasource.account.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (username, display_name, mobile, 
      email, password, type, 
      uid, status, master_id, 
      is_api_access, is_console_access, is_need_verify, 
      description, created_at, updated_at
      )
    values (#{username,jdbcType=VARCHAR}, #{displayName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{uid,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{masterId,jdbcType=BIGINT}, 
      #{isApiAccess,jdbcType=BIT}, #{isConsoleAccess,jdbcType=BIT}, #{isNeedVerify,jdbcType=BIT}, 
      #{description,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.nounsys.nounservice.datasource.account.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="displayName != null">
        display_name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
      <if test="isApiAccess != null">
        is_api_access,
      </if>
      <if test="isConsoleAccess != null">
        is_console_access,
      </if>
      <if test="isNeedVerify != null">
        is_need_verify,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=BIGINT},
      </if>
      <if test="isApiAccess != null">
        #{isApiAccess,jdbcType=BIT},
      </if>
      <if test="isConsoleAccess != null">
        #{isConsoleAccess,jdbcType=BIT},
      </if>
      <if test="isNeedVerify != null">
        #{isNeedVerify,jdbcType=BIT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.nounsys.nounservice.datasource.account.entity.User">
    update t_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="displayName != null">
        display_name = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=BIGINT},
      </if>
      <if test="isApiAccess != null">
        is_api_access = #{isApiAccess,jdbcType=BIT},
      </if>
      <if test="isConsoleAccess != null">
        is_console_access = #{isConsoleAccess,jdbcType=BIT},
      </if>
      <if test="isNeedVerify != null">
        is_need_verify = #{isNeedVerify,jdbcType=BIT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nounsys.nounservice.datasource.account.entity.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      display_name = #{displayName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      master_id = #{masterId,jdbcType=BIGINT},
      is_api_access = #{isApiAccess,jdbcType=BIT},
      is_console_access = #{isConsoleAccess,jdbcType=BIT},
      is_need_verify = #{isNeedVerify,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>